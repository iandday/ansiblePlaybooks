---
#
# roles/hass/tasks/install_hass.yml
#

- name: add python3.6 ppa
  apt_repository:
    repo: '{{ item }}'
    state: present
  with_items: 
    - '{{ hass_package_repo }}'
  become: true

- name: install packages
  include_role:
    name: common
    tasks_from: install_packages
  vars:
    packages: '{{ hass_apt_packages }}'

- name: link python3.6 to python3
  file:
    src: /usr/bin/python3.6
    dest: /usr/local/bin/python3
    state: link
  become: true

- name: install venv
  pip: 
    name: virtualenv
    state: latest
  become: true

- name: create homeassistant group
  group:
    name: '{{ hass_user }}'
    state: present  
  become: true

- name: create hass user
  user:
    name: '{{ hass_user}}'
    group: '{{ hass_user }}'
    shell: /bin/bash
    groups: 
      - dialout
    append: yes
    system: yes   
  become: true 
 
- name: create install directory
  file:
    path: '{{ hass_install_dir }}' 
    state: directory
    owner: '{{ hass_user }}'
    group: '{{ hass_user }}'   
  become: yes

- name: install pip packages
  pip: 
    name: '{{ item }}'
    virtualenv: '{{ hass_install_dir }}'
    state: latest
  with_items:
    - 'homeassistant'
    - 'websocket-client'
  notify: restart hass
  become: yes
  become_user: '{{ hass_user }}'

- name: install appdaemon
  pip: 
    name: 'appdaemon'
    virtualenv: '{{ hass_install_dir }}'
    extra_args: '--pre'
  notify: restart appdaemon
  become: yes
  become_user: '{{ hass_user }}'

- name: create config directory
  file: 
    path: '{{ hass_config_dir }}' 
    state: directory
    owner: '{{ hass_user}}'
    group: '{{ hass_user}}'
  become: yes

- name: clone config repo
  command: '{{ item }}'
  args:
    chdir: '{{ hass_config_dir }}'
    creates: '{{ hass_config_dir }}/README.md'
  with_items:
    - 'git init'
    - 'git remote add origin https://github.com/iandday/hassConfig.git'
    - 'git fetch'
    - 'git checkout -f -t origin/master'
  become: yes
  become_user: '{{ hass_user }}'

- name: create backup directory mount path
  file:
    path: '/mnt/backup_{{ hass_backup_path }}'
    state: directory
  become: true

- name: check if backup directory is mounted
  command: '/bin/mountpoint /mnt/backup_{{ hass_backup_path }}'
  register: hass_backup_checked
  ignore_errors: yes
  changed_when: 'hass_backup_checked.rc != 0'
  become: true

- name: mount backup directory
  include_role:
    name: common
    tasks_from: mount_backup
  vars:
    - username: '{{ hass_service_username }}'
    - password: '{{ hass_service_password }}'
    - path: '{{ hass_backup_path }}'
    - uid: '{{ hass_user }}'
    - gid: '{{ hass_user }}'
  when: hass_backup_checked.stdout.find('is a mountpoint') == -1
     
- name: copy autostart templates
  template:
    src: '{{ item }}.j2'
    dest: '/etc/systemd/system/{{ item }}'
    owner: root
    group: root
    mode: 0777
  with_items:
    - home-assistant@homeassistant.service
    - appdaemon@appdaemon.service
  become: true
 
- name: enable autostart
  service:
    name: home-assistant@homeassistant
    enabled: yes
    state: started
  with_items:
    - home-assistant@homeassistant.service
    - appdaemon@appdaemon.service
  become: true
 
- name: copy backup script
  template:
    src: backup_hass.sh.j2
    dest: /usr/local/bin/backup_hass.sh
    mode: 'a+x'
  become: true

- name: setup backup cronjob
  cron:
    name: 'Backup hass'
    job: '/usr/local/bin/backup_hass.sh'
    user: '{{ hass_user }}'
    cron_file: 'backup_hass'
    hour: '3'
    minute: '5'
  become: true

- name: configure backup rotation
  include_role:
    name: common
    tasks_from: rotate_backups
  vars:
    - cron_user: '{{ hass_user }}'
    - backup_path: '{{ hass_backup_path }}' 
 