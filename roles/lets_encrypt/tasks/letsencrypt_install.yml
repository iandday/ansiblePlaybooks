---
# 
# Let's Encrypt support for production CA
#

- name: install packages
  include_role:
    name: common
    tasks_from: install_packages
  vars:
    packages: '{{ le_apt_packages }}'

- name: clone dehydrated repo
  git:
    repo: '{{ le_dehydrated_repo }}'
    dest: '{{ le_dehydrated_dest }}'
  become: true
- name: copy requirements file
  copy:
    src: requirements.txt
    dest: /tmp/requirements.txt

- name: clone godaddy hook repo
  git:
    repo: '{{ le_godaddy_dns_repo }}'
    dest: '{{ le_godaddy_dns_dest }}'
  become: true

- name: install python modules
  pip:
    requirements: '{{ le_godaddy_dns_dest }}/requirements.txt' 
  become: true

- name: create output directory
  file:
    path: '{{ le_cert_out_directory }}'
    owner: '{{ le_web_user }}'
    group: '{{ le_web_user }}'
    state: directory
  become: true

- name: set godaddy key and secret variables
  lineinfile: 
    path: '/etc/environment'
    line: '{{ item }}'
  with_items:
    - 'GD_KEY={{ le_godaddy_key }}'
    - 'GD_SECRET={{ le_godaddy_secret }}'
  become: true
  register: env_vars

- name: restart to set env vars
  include_role:
    name: common
    tasks_from: reboot
  when: env_vars is changed

- name: create domain list
  lineinfile:
    state: present
    create: yes
    path: '{{ le_dehydrated_dest }}/domains'
    line: '{{ item }}'
  with_items: '{{ le_domains }}'
  become: true

- name: link godaddy dns hook script
  file:
    src: '{{ le_godaddy_dns_dest }}/godaddy.py'
    dest: '{{ le_dehydrated_dest }}/godaddy.py'
    owner: '{{ le_web_user }}'
    group: '{{ le_web_user }}'
    state: link
  become: true

- name: copy dehydrated config files
  template:
    src: '{{ item }}'
    dest: '{{ le_dehydrated_dest }}'
    owner: '{{ le_web_user }}'
    group: '{{ le_web_user }}'
    mode: 0644
  with_items:
    - 'config.production'
    - 'config.staging'
  become: true

- name: enable production Let's Encrypt CA
  file:
    state: link
    src: '{{ le_dehydrated_dest }}/config.{{ le_install_type }}'
    dest: '{{ le_dehydrated_dest }}/config'
  become: true

- name: setup cron job
  cron:
    name: Let's Encrypt daily certificate check
    special_time: daily
    job: '{{ le_dehydrated_dest }}/dehydrated --cron --accept-terms --config {{ le_dehydrated_dest }}/config --hook {{ le_dehydrated_dest }}/godaddy.py'
  become: true

- name: generate initial certificates
  command: '{{ le_dehydrated_dest }}/dehydrated --cron --accept-terms --config {{ le_dehydrated_dest }}/config --hook {{ le_dehydrated_dest }}/godaddy.py' 
  environment:
    GD_KEY: '{{ le_godaddy_key }}'
    GD_SECRET: '{{ le_godaddy_secret }}'
  become: true
  notify: restart apache

- name: enable autostart and start incron
  service:
    name: '{{ le_incron_daemon }}'
    state: started
    enabled: yes
  become: true

- name: create ssl watch directory
  file:
    path: '{{ le_cert_out_directory }}/watch'
    state: directory
  become: true

- name: link all certs to watch directory
  file:
    src: '{{ le_cert_out_directory }}/{{ item }}/fullchain.pem'
    dest: '{{ le_cert_out_directory }}/watch/{{ item }}.pem'
    state: link
  with_items:
    - '{{ le_domains }}'  
  become: true
  notify: restart incron

- name: configure cert watcher
  template:
    src: incrontab.j2
    dest: '{{ le_incron_config_dir }}/{{ item.name }}'
  with_items:
    - { name: apacheCert, path: '{{ le_cert_out_directory }}/watch', mask: 'IN_MODIFY', command: '/usr/sbin/service apache2 restart' }
  become: true
  notify: restart incron