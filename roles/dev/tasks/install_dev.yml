---
#
# roles/dev/tasks/install_dev.yml
#

- name: add package repo key(s)
  apt_key:
    url: '{{ item }}'
    state: present
  with_items:
    - '{{ package_key }}'
  become: true

- name: add package repo source(s)
  apt_repository:
    repo: '{{ item }}'
    state: present
  with_items: 
    - '{{ package_repo }}'
  become: true

- name: install packages
  include_role:
    name: common
    tasks_from: install_packages
  vars:
    packages: '{{ apt_packages }}'

- name: get user details
  getent:
    database: passwd
    key: '{{ ad_user }}'

- name: set user facts
  set_fact:
    uid: '{{ getent_passwd[ad_user][1] }}'
    gid:  '{{ getent_passwd[ad_user][2] }}'
    home: '{{ getent_passwd[ad_user][4] }}'

- name: create home directory for AD user
  file:
    path: '{{ home }}'
    state: directory
    owner: '{{ uid }}'
    group: '{{ gid }}'
    mode: 0700
  become: true    

- name: copy skeleton files
  copy:
    src: '/etc/skel/{{ item }}'
    dest: '{{ home }}/{{ item }}'
    remote_src: yes
    owner: '{{ uid }}'
    group: '{{ gid }}'
    mode: 0600
  with_items:
    - '.bash_logout'
    - '.bashrc'
    - '.profile'
  become: true

- name: allow domain login through GUI
  lineinfile:
    path: /etc/lightdm/lightdm.conf.d/50-unity-greeter.conf
    create: yes
    state: present
    line: '{{ item }}'
  with_items:
    - 'greeter-show-manual-login=true'
    - 'greeter-hide-users=true'
  become: true

- name: create ansible credential file
  template:
    src: .ansibleCredential.j2
    dest: '{{ home }}/.ansibleCredential'
    mode: 0600
    owner: '{{ uid }}'
    group: '{{ gid }}'
  no_log: true
  become: true

- name: set bash aliases
  lineinfile:
    path: '{{ home }}/.bashrc'
    line: "alias {{ item.name }}='{{ item.command }}'"
    mode: 0600
    state: present
    create: yes
    owner: '{{ uid }}'
    group: '{{ gid }}'
  with_items:
    - '{{ aliases }}'
  become: true  

- name: create git options file
  template:
    src: .gitconfig.j2
    dest: '{{ home }}/.gitconfig'
    mode: 0600
    owner: '{{ uid }}'
    group: '{{ gid }}'
  become: true

- name: create pypi configuration
  template:
    src: .pypirc.j2
    dest: '{{ home }}/.pypirc'
    mode: 0600
    owner: '{{ uid }}'
    group: '{{ gid }}'
  become: true

- name: create git ignore file
  lineinfile:
    path: '{{ home }}/.gitignore'
    line: '{{ item }}'
    mode: 0600
    state: present
    create: yes
    owner: '{{ uid }}'
    group: '{{ gid }}'
  with_items:
    - '{{ git_ignore }}'
  become: true

- name: create git repo directory
  file:
    path: '{{ home }}/git'
    state: directory
    owner: '{{ uid }}'
    group: '{{ gid }}'
  become: true 

- name: create ssh key directory
  file:
    path: '{{ home }}/.ssh'
    mode: 0700
    state: directory
    owner: '{{ uid }}'
    group: '{{ gid }}'
  become: true  

- name: set git ssh options
  template: 
    src: .sshconfig.j2
    dest: '{{ home }}/.ssh/config'
    mode: 0600
    owner: '{{ uid }}'
    group: '{{ gid }}'
  become: true

- name: copy ansible ssh key
  copy:
    src: id_rsa-Ansible
    dest: '{{ home }}/.ssh/id_rsa-Ansible'
    mode: 0600
    owner: '{{ uid }}'
    group: '{{ gid }}'
  become: true

- name: copy github ssh key
  copy:
    src: id_rsa-Github
    dest: '{{ home }}/.ssh/id_rsa-Github'
    mode: 0600
    owner: '{{ uid }}'
    group: '{{ gid }}'
  become: true

- name: clone git repos
  git:
    repo: '{{ item }}'
    dest: "{{ home }}/git/{{ item|basename|splitext|first }}"
    key_file: '{{ home }}/.ssh/id_rsa-Github'
    ssh_opts: '-o StrictHostKeyChecking=no'
  with_items:
    - '{{ git_repos }}'
  become: true
  become_user: '{{ ad_user }}'

- name: create vscode directory
  file:
    path: '{{ home }}/.vscode'
    owner: '{{ uid }}'
    group: '{{ gid }}'
    state: directory
    mode: 'u=rwx,go=r'
  become: true

- name: create extensions directory
  file:
    path: '{{ home }}/.vscode/extensions'
    state: directory
    owner: '{{ uid }}'
    group: '{{ gid }}'
    mode: 'u=rwx,go='
  become: true

- name: install extensions
  command: "code --install-extension '{{ item }}'"
  with_items:
    - '{{ dev_vscode_extensions }}'
  become: true
  become_user: '{{ uid }}'


