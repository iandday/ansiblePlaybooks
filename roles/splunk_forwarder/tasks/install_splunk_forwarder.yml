---
#
# roles/splunk_forwarder/tasks/install_splunk_forwarder.yml
#

- name: check if forwarder is installed
  stat: 
    path: '{{ uf_splunk_path }}'
  register: splunk_path

- name: copy UF installer
  copy:
    src: '{{ uf_deb_file }}'
    dest: '/tmp/{{ uf_deb_file }}'
  become: true  

- name: install UF
  apt:
    deb: '/tmp/{{ uf_deb_file }}'
  become: true

- name: create splunk user
  user:
    name: '{{ uf_splunk_user }}'
    system: yes
    groups: '{{ uf_splunk_group }},{{ log_group }}'
  become: true

- name: change ownership of splunk directory
  file:
    path: '{{ uf_splunk_path }}'
    owner: '{{ uf_splunk_user }}'
    group: '{{ uf_splunk_group }}'
    state: directory
    recurse: yes  
  become: true

- name: start splunk
  shell: '{{ uf_splunk_path }}/bin/splunk start --accept-license'
  become: true
  become_user: '{{ uf_splunk_user }}'
  when: splunk_path.stat.exists == false

- name: enable boot-start
  shell: '{{ uf_splunk_path }}/bin/splunk enable boot-start -user {{ uf_splunk_user }}'
  become: true
  when: splunk_path.stat.exists == false

- name: change forwarder admin credentials
  shell: '{{ uf_splunk_path }}/bin/splunk edit user admin -password {{ uf_forwarder_password }} -auth admin:changeme'
  become: true
  become_user: '{{ uf_splunk_user }}'
  when: splunk_path.stat.exists == false

- name: configure forward-server
  blockinfile:
    path: /opt/splunkforwarder/etc/system/local/outputs.conf
    create: yes
    block: |
      [tcpout]
      defaultGroup = default-autolb-group

      [tcpout:default-autolb-group]
      server = {{ uf_server_host }}:{{ uf_server_port }}

      [tcpout-server://{{ uf_server_host }}:{{ uf_server_port }}]
    marker: "# {mark} ANSIBLE MANAGED BLOCK"
  become: true
  become_user: '{{ uf_splunk_user }}'
  register: splunk_output

- name: add directories to monitor
  blockinfile:
    path: '{{ uf_splunk_path }}/etc/system/local/inputs.conf'
    create: yes
    block: |
      [monitor://{{ item.directory }}] 
      sourcetype={{ item.sourcetype }}
      index={{ item.index }}
      disabled = 0
    marker: '# {mark} ANSIBLE MANAGED BLOCK Monitoring directory: {{ item.directory }}'
  become: true
  become_user: '{{ uf_splunk_user }}'
  with_items: '{{ splunked_directories }}'
  register: splunk_input

- name: restart splunkd
  shell: '{{ uf_splunk_path }}/bin/splunk restart'
  become: true
  become_user: '{{ uf_splunk_user }}'
  when: splunk_output.changed or splunk_input.changed

