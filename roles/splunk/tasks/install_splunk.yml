---
#
# roles/splunk/tasks/install_splunk.yml
#
    
- name: install packages
  include_role:
    name: common
    tasks_from: install_packages
  vars:
    packages: '{{ splunk_apt_packages }}'

- name: upgrade all packages
  include_role:
    name: common
    tasks_from: update_packages

- name: check if splunk is installed
  stat: 
    path: /opt/splunk
  register: splunk_path

- name: download and install splunk package
  apt:
    deb: '{{ splunk_url }}'
    install_recommends: yes
  become: true
  when: splunk_path.stat.exists == false

- name: create splunk user
  user:
    name: '{{ splunk_user }}'
    group: '{{ splunk_group }}'
  become: true

- name: mount data network share
  mount: 
    path: '{{ splunk_dir }}/var/lib/splunk' 
    src: '{{ network_path }}'
    fstype: nfs 
    state: mounted    
  become: true
    
- name: modify splunk directory permissions
  file:
    path: '{{ splunk_dir }}'
    owner: '{{ splunk_user }}'
    group: '{{ splunk_group }}'
    recurse: yes
  become: true

- name: initial splunk start
  command: '{{ splunk_dir }}/bin/splunk start --accept-license --answer-yes --no-prompt --seed-passwd {{ splunk_admin_password }}'
  args:
    creates: '{{ splunk_dir }}/etc/licenses'
  become: true
  become_user: '{{ splunk_user }}'
  
- name: start splunk at boot
  command: '{{ splunk_dir }}/bin/splunk enable boot-start -user {{ splunk_user }}' 
  become: true
  when: splunk_path.stat.exists == false

- name: transfer license file
  copy:
    src: '{{ splunk_license_filename }}' 
    dest: '{{ splunk_dir }}/{{ splunk_license_filename }}'
    owner: '{{ splunk_user }}'
    group: '{{ splunk_group }}'
  become: true
  register: license_status

- name: register license 
  shell: '{{ splunk_dir }}/bin/splunk add licenses {{ splunk_dir }}/{{ splunk_license_filename }} -auth admin:{{ splunk_admin_password }}'
  become: true
  become_user: '{{ splunk_user }}'
  when: license_status is changed
  notify: restart splunk

- name: enable universal forwarder listener on tcp 9997
  shell: '{{ splunk_dir }}/bin/splunk enable listen 9997 -auth admin:{{ splunk_admin_password }}'
  no_log: true
  become: true
  become_user: '{{ splunk_user }}'
  when: splunk_path.stat.exists == false
  
- name: clone apps from github
  git:
    repo: '{{ item.r }}'
    dest: '{{ splunk_dir }}/etc/apps/{{ item.n }}'
  become: true
  become_user: '{{ splunk_user }}'
  notify: restart splunk
  with_items:
    - '{{ splunk_app_repos }}'
